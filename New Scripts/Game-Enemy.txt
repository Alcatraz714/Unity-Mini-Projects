#include <iostream>
#include <ctime>
using namespace std;

void gameStory() 
{
    cout << "<------------------------------------>\n";
    cout << "\nWelcome to the Dragon's Age\n";
    cout << "\n<------------------------------------>\n";
    cout << "\nYou find yourself in a mystical realm filled with dragons and treasures.\n";
    cout << "Your mission is to find the legendary sword of power!\n";
    cout << "But beware, dangers lurk around every corner, defeat the dragon lord and save the world..\n";
    cout << "\n<------------------------------------>\n";
}

class Player 
{
    private:
        int health =100;
        
        int maxAttack = 40;
        int minAttack = 20;
        
        int maxHeal = 20;
        int minHeal = 10;
    
    public:
        Player() 
        {
            cout << "\n<------------------------------------>\n";
            cout << "\nSummoned Player use your powers to slay dragons and find the Dragon's Bane...";
            cout << "\nYou have gained power since coming here but you need to get stronger..";
            cout << "\nYou have the makings of the Dragonborn who wielded the Dragon's Bane.\n";
            cout << "\n<------------------------------------>\n";
            cout << "\nHere are your stats and powers:\n";
            cout << "Health: " << health << "\n";
            cout << "Attack Power Range: " << minAttack <<"-"<< maxAttack <<".\n";
            cout << "Healing Range: " << minHeal <<"-"<< maxHeal <<".\n";
            cout << "\n<------------------------------------>\n";
        }
        
        int GetHealth()
        {
            return health;
        }
        void TakeDamage(int Damage)
        {
            if(health>0)
            {
                cout << "Hit by an enemy, dealt "<<Damage<<" damage on critical hit\n";
                health = health - Damage;
                cout << "Player health after the hit: "<<health<<endl;
            }
            else
            {
                cout << "\nYou died after taking too much damage\n";
            }
        }
        int GiveDamage()
        {
            srand(time(0));
            int randomDamage = (rand() % (maxAttack - minAttack + 1) + minAttack);
            cout << "Enemy attacked dealing :"<<randomDamage<<" damage"<<endl;
            return randomDamage;
        }
        void Heal()
        {
            srand(time(0));
            int randomHeal = (rand() % (maxHeal - minHeal + 1 ) + minHeal);
            health = health + randomHeal;
            
            cout << "Used healing spell HP gained: " << randomHeal << endl;
            cout << "Health after healing: " << health << endl;
        }
};

class Enemy
{
    private:
        int health =50;
        
        int maxAttack = 20;
        int minAttack = 10;
        
    public:
            Enemy()
            {
                cout << "\n<------------------------------------>\n";
                cout << "\nA dragon enemy has appeared..";
                cout << "\nI shall kill you and receive my lords praise!!\n";
                cout << "\nPrepare for battle\n";
                cout << "\n<------------------------------------>\n";
                cout << "\nEnemy stats and powers:\n";
                cout << "Health: " << health << "\n";
                cout << "Attack Power Range: " << minAttack <<"-"<< maxAttack <<".\n";
                cout << "\n<------------------------------------>\n";
            }
            
            void TakeDamage(int Damage)
            {
                if(health>0)
                {
                    cout << "Hit by the Player, dealt "<<Damage<<" damage on critical hit\n";
                    health = health - Damage;
                    cout << "Enemy health after the hit: "<<health<<endl;
                }
                else
                {
                    cout << "\nEnemy died after taking too much damage\n";
                }
            }
            int GiveDamage()
            {
                srand(time(0));
                int randomDamage = (rand() % (maxAttack - minAttack + 1) + minAttack);
                cout << "Enemy attacked dealing :"<<randomDamage<<" damage"<<endl;
                return randomDamage;
            }
            int GetHealth()
            {
                return health;
            }
};


int main() 
{
    gameStory();
    char uInput;
    do
    {
        cout << "\nPress S to start and other key to exit\n";
        cin >> uInput;
        
        if(uInput == 'S' || uInput == 's')
        {
            Player player1; //object of the player
            Enemy Enemy1; //object of the enemy 
            
        }
        else
        {
            cout << "\nThanks for playing Dragon's Age\n";
        }
        
    }
    while(uInput == 'S' || uInput == 's');
    
    return 0;
}
